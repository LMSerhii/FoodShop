{"version":3,"file":"commonHelpers.js","sources":["../src/js/orderCart.js","../src/js/cart.js"],"sourcesContent":["import { load, save, remove } from './storage';\nimport { common } from './common';\nimport { createOrder } from './api_service';\nimport { renderCart, onClose } from './cart'\n\nconst orderCart = load(common.LOCAL_CART_KEY) ?? [];\norderCart.forEach(product => {\n    product.amount = 1;\n});\nsave(common.ORDER, orderCart);\nconsole.log(orderCart);\n\n\n// Функція для обробки замовлення\nasync function handleOrder() {\n  // Збір інформації з форми\n    const userEmail = document.getElementById('user-email').value;\n\n  // Завантаження або створення кошика\n    const orderCart = load(common.LOCAL_CART_KEY) ?? [];\n\n  // Встановлення кількості для кожного продукту\n    orderCart.forEach(product => {\n    product.amount = 1;\n});\n\n  // Збереження зміненого кошика\n    save(common.ORDER, orderCart);\n    console.log(orderCart);\n\n  // Перетворення структури даних для відповідності вимогам сервера\n    const formattedOrderCart = orderCart.map(product => {\n    return {\n        productId: product._id,\n        amount: product.amount,\n    };\n    });\n\n    try {\n    // Виклик функції createOrder з оновленими даними з orderCart\n    const orderResponse = await createOrder(userEmail, formattedOrderCart);\n    console.log('Відповідь на замовлення:', orderResponse);\n    console.log(userEmail, formattedOrderCart);\n\n    // Чекаємо, наприклад, 5 секунд перед очищенням сторінки\n    setTimeout(() => {\n        // Очистка сховища для cart і order\n        save(common.LOCAL_CART_KEY, []);\n        save(common.ORDER, []);\n\n        // Перезавантаження сторінки\n        location.reload();\n        }, 2000);\n\n    console.log('Відповідь на замовлення:', orderResponse);\n    // Очистити форму або виконати інші дії після успішного замовлення\n    } catch (error) {\n    // Обробка помилки\n    console.error('Помилка при замовленні:', error);\n    }\n}\n\n// Обробник події для кнопки\ndocument\n    .getElementById('checkoutButton')\n    .addEventListener('click', function (event) {\n    event.preventDefault();\n\n    // Виклик функції для обробки замовлення\n    handleOrder();\n        \n});\n\n\nexport { orderCart };\n","import { load, save, remove } from './storage';\nimport { common } from './common';\nimport { producCartMarkup } from './markupFunctions';\nimport { orderCart } from './orderCart';\nimport { refs } from './refs';\n\nconst cart = load(common.LOCAL_CART_KEY) ?? [];\n\nconst renderItemCount = () => {\n  const itemCount = cart.length;\n\n  refs.productsCount.textContent = `(${itemCount})`;\n  refs.productsCountHeader.textContent = `(${itemCount})`;\n};\n\nconst validClose = productId => {\n  const index = cart.findIndex(({ _id }) => _id === productId);\n\n  console.log(index);\n\n  cart.splice(index, 1);\n\n  remove(common.LOCAL_CART_KEY);\n\n  save(common.LOCAL_CART_KEY, cart);\n\n  refs.cartList.innerHTML = producCartMarkup(cart);\n  renderTotalAmount(); // Оновлення суми при видаленні товару\n  renderItemCount();\n};\n\nconst onClose = evt => {\n  if (evt.currentTarget === evt.target) {\n    return;\n  }\n\n  const id = evt.target.closest('.js-card').dataset.id;\n  console.log(evt.target);\n\n  if (evt.target.classList.contains('js-close')) {\n    validClose(id);\n  }\n};\n\nconst renderTotalAmount = () => {\n  const totalAmount = cart\n    .reduce((acc, product) => acc + product.price, 0)\n    .toFixed(2);\n  refs.totalAmountDisplay.textContent = `$${totalAmount}`;\n};\n\n// Функція для очищення значення ключа \"cart\" у локальному сховищі\nconst clearCartLocalStorage = () => {\n  localStorage.setItem('cart', '[]');\n  location.reload();\n};\n\nconst renderCart = () => {\n  if (cart.length > 3) {\n    // Застосування вертикального скролу\n    refs.cartList.classList.add('scrollable');\n  }\n\n  refs.cartList.innerHTML = producCartMarkup(cart);\n  refs.cartList.addEventListener('click', onClose);\n  renderTotalAmount();\n};\n\n// Отримуємо всі елементи з класом .counter-pr\nconst counters = document.querySelectorAll('.counter-pr');\n\n// Додаємо обробник подій до кожного елемента\ncounters.forEach(counter => {\n  const counterValue = counter.querySelector('#value');\n  let value = 0; // Початкове значення лічильника\n\n  const decrementButton = counter.querySelector('[data-action=\"decrement\"]');\n  const incrementButton = counter.querySelector('[data-action=\"increment\"]');\n\n  decrementButton.addEventListener('click', () => {\n    if (value > 0) {\n      value -= 1; // Зменшення значення на 1 при кліку на кнопку \"-\", якщо воно більше 0\n      updateCounter(counterValue, value);\n    }\n  });\n\n  incrementButton.addEventListener('click', () => {\n    value += 1; // Збільшення значення на 1 при кліку на кнопку \"+\"\n    updateCounter(counterValue, value);\n  });\n});\n\nconst updateCounter = (counterValue, value) => {\n  counterValue.textContent = value; // Оновлення значення лічильника в інтерфейсі\n};\n\nrenderItemCount();\nrenderCart();\n\n// Додавання обробника подій для кнопки \"Delete all\"\nrefs.deleteAllButton.addEventListener('click', clearCartLocalStorage);\n\nexport { clearCartLocalStorage, renderCart, onClose };\n"],"names":["orderCart","load","common","product","save","handleOrder","userEmail","formattedOrderCart","orderResponse","createOrder","error","event","cart","renderItemCount","itemCount","refs","validClose","productId","index","_id","remove","producCartMarkup","renderTotalAmount","onClose","evt","id","totalAmount","acc","clearCartLocalStorage","renderCart","counters","counter","counterValue","value","decrementButton","incrementButton","updateCounter"],"mappings":"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"}